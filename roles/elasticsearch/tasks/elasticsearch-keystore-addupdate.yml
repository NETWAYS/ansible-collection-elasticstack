---

# Unless we clear the variable there is an edgecase
# where we skip the Get task, and procced to the
# set task with results from the previous run.
# If the previous variable matches the new one,
# we end up never setting the var.
- name: Clear temporary variable
  ansible.builtin.set_fact:
    elasticsearch_keystore_current_value: null

- name: Get keystore value for {{ item.key }}
  ansible.builtin.command:
    argv:
      - /usr/share/elasticsearch/bin/elasticsearch-keystore
      - show
      - "{{ item.key | quote }}"
  changed_when: false
  register: elasticsearch_keystore_current_value
  failed_when: elasticsearch_keystore_current_value.rc != 0
  when:
    - "item.key in elasticsearch_keystore_current_items.stdout_lines"

- name: Set keystore value for {{ item.key }}
  ansible.builtin.command:
    argv:
      - /usr/share/elasticsearch/bin/elasticsearch-keystore
      - add
      - -f
      - -x
      - "{{ item.key | quote }}"
    stdin: "{{ item.value }}"
  changed_when: true
  register: result
  failed_when: result.rc != 0
  when:
    - elasticsearch_keystore_current_value.stdout is undefined or item.value != elasticsearch_keystore_current_value.stdout
  notify:
    - Restart Elasticsearch
