# Ansible
#
# Rolling Upgrade of Elasticsearch with security on
# Source from: author: Jeff Steinmetz, @jeffsteinmetz; Bin Li, @holysoros
# Modifications: author: Daniel Neuberger @netways.de
# More modifications: NETWAYS Professional Services GmbH
# latest tested with Ansible 2.9 and later

---

# For now we support upgrade only for clusters with security enabled
# If you positively need support for safely upgrading clusters without security,
# feel free to open an issue at https://github.com/NETWAYS/ansible-collection-elasticstack/issues

- name: Start elasticsearch
  ansible.builtin.service:
    name: elasticsearch
    enabled: yes
    state: started
  when:
    - elasticsearch_running.status.ActiveState == "active"
    - not elasticsearch_unsafe_upgrade_restart | bool

- name: Restart elasticsearch (fast, for non-prod)
  ansible.builtin.service:
    name: elasticsearch
    enabled: yes
    state: restarted
  when:
    - elasticsearch_running.status.ActiveState == "active"
    - elasticsearch_unsafe_upgrade_restart | bool

- name: Wait for elasticsearch node to come back up if it was stopped
  ansible.builtin.wait_for:
    host: "{{ elasticsearch_api_host }}"
    port: "{{ elasticstack_elasticsearch_http_port }}"
    delay: 30

- name: Confirm the node joins the cluster
  ansible.builtin.uri:
    url: "{{ elasticsearch_http_protocol }}://{{ elasticsearch_api_host }}:{{ elasticstack_elasticsearch_http_port }}/_cat/nodes?h=name&format=json"
    method: GET
    user: elastic
    password: "{{ elasticstack_password.stdout }}"
    validate_certs: no
  register: response
  until: node_found | bool
  retries: 200
  delay: 3
  changed_when: false
  vars:
    node_found: "{{ response.json | json_query(node_query) | length > 0 }}"
    node_query: "[?name=='{{ elasticsearch_nodename }}']"

# Don't continue the play unless cluster health is OK
- name: Cluster health check
  ansible.builtin.include_tasks: elasticsearch-wait-for-cluster-health.yml

- name: Restart ML jobs
  ansible.builtin.uri:
    url: "{{ elasticsearch_http_protocol }}://{{ elasticsearch_api_host }}:{{ elasticstack_elasticsearch_http_port }}/_ml/set_upgrade_mode?enabled=false"
    method: POST
    user: elastic
    password: "{{ elasticstack_password.stdout }}"
    validate_certs: no
  failed_when: false
  when:
    - elasticsearch_upgrade_stop_ml | bool
