---

- name: Include OS specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_os_family }}.yml'

- name: Set common password for common certificates
  set_fact:
    kibana_tls_key_passphrase: "{{ elasticstack_cert_pass }}"
  when:
    - elasticstack_cert_pass is defined

- name: Set Elasticsearch hosts if used with other roles
  set_fact:
    kibana_elasticsearch_hosts: "{{ groups['elasticsearch'] }}"
  when:
    - kibana_elasticsearch_hosts is undefined
    - groups['elasticsearch'] is defined

- name: Set Elasticsearch hosts to localhost if no other info is available
  set_fact:
    kibana_elasticsearch_hosts:
      - localhost
  when:
    - kibana_elasticsearch_hosts is undefined
    - groups['elasticsearch'] is undefined

- name: Construct exact name of Kibana package
  set_fact:
    kibana_package: >
      {{
      'kibana' +
      ('-oss' if elasticstack_variant == 'oss' else '') +
      (elasticstack_versionseparator +
      elasticstack_version |
      string if elasticstack_version is defined else '') |
      replace(' ', '') }}

- name: Install Kibana - rpm
  package:
    name: "{{ kibana_package }}"
    enablerepo:
      - 'elastic-{% if elasticstack_variant == "oss" %}oss-{% endif %}{{ elasticstack_release }}.x'
  when:
    - ansible_os_family == "RedHat"

- name: Install Kibana - deb
  package:
    name: "{{ kibana_package }}"
  when:
    - ansible_os_family == "Debian"

- name: Import security related tasks
  import_tasks: kibana-security.yml
  when:
    - elasticstack_full_stack is defined
    - elasticstack_full_stack | bool
    - kibana_security | bool
    - elasticstack_variant == "elastic"
  tags:
    - certificates
    - renew_ca
    - renew_kibana_cert

- name: Configure Kibana
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: root
    mode: 0644
    backup: "{{ kibana_config_backup }}"
  notify:
    - Restart Kibana
  when: kibana_manage_yaml | bool

- name: Start Kibana
  service:
    name: kibana
    state: started
    enabled: yes
  when: kibana_enable | bool

- name: wait some time
  wait_for:
    timeout: 120

# the following is useful when running tests or extra tasks that need to
# have Kibana running

- name: Get packages
  package_facts:
    manager: "auto"
  changed_when: false

- name: List packages
  debug:
    var: ansible_facts.packages

- name: Install netstat
  package:
    name: net-tools

- name: List hosts # noqa 305
  shell: cat /etc/hosts
  register: result_hosts
  changed_when: false

- name: print hosts
  debug:
    var: result_hosts

- name: Get kibana config # noqa 305
  shell: cat /etc/kibana/kibana.yml
  register: kibana_config
  changed_when: false

- debug:
    var: kibana_config

- name: check kibana # noqa 305
  shell: "curl -I http://localhost:5601"
  register: kibana_state1
  changed_when: false

- debug:
    var: kibana_state1

- name: install telnet
  package:
    name: telnet

- name: check kibana # noqa 305
  shell: "echo 'exit' | telnet localhost 5601"
  register: kibana_port
  failed_when: false
  changed_when: false

- debug:
    var: kibana_port

- name: netstat # noqa 305
  shell: netstat -taulpen
  register: netstat_result
  changed_when: false

- name: print netstat
  debug:
    var: netstat_result

- name: git kibana service status # noqa 305
  shell: systemctl status kibana
  register: kibana_status
  changed_when: false

- name: print kibana service status
  debug:
    var: kibana_status

- name: Wait for Kibana to start
  wait_for:
    host: localhost
    port: 5601
    timeout: 120
  failed_when: false
