---

- name: Update apt cache.
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 600
  changed_when: false
  when: ansible_os_family == 'Debian'

- name: Include OS specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_os_family }}.yml'

- name: Prepare for whole stack roles if used
  when:
    - elasticstack_full_stack | bool
  block:

    - name: Set Elasticsearch hosts if used with other roles
      ansible.builtin.set_fact:
        logstash_elasticsearch: "{{ groups[elasticstack_elasticsearch_group_name] }}"
      when:
        - logstash_elasticsearch is undefined
        - groups[elasticstack_elasticsearch_group_name] is defined
      tags:
        - configuration
        - logstash_configuration

    - name: Activate TLS for Beats for full stack
      ansible.builtin.set_fact:
        logstash_beats_tls: true
      when:
        - logstash_beats_tls is undefined
        - not elasticstack_override_beats_tls | bool

- name: Set Elasticsearch hosts to localhost if no other information available
  ansible.builtin.set_fact:
    logstash_elasticsearch:
      - localhost
  when:
    - logstash_elasticsearch is undefined
    - groups[elasticstack_elasticsearch_group_name] is undefined
  tags:
    - configuration
    - logstash_configuration

- name: Enable security as default when in full stack mode
  ansible.builtin.set_fact:
    logstash_security: true
  when:
    - logstash_security is undefined or elasticstack_security | bool
    - elasticstack_full_stack | bool
    - elasticstack_variant == "elastic"
  tags:
    - certificates
    - renew_ca
    - renew_logstash_cert

- name: Construct exact name of Logstas package
  ansible.builtin.set_fact:
    logstash_package: >
      {{
      'logstash' +
      ('-oss' if elasticstack_variant == 'oss' else '') +
      (elasticstack_versionseparator +
      elasticstack_version |
      string if elasticstack_version is defined else '') |
      replace(' ', '')
      }}

- name: Install Logstash - rpm
  ansible.builtin.package:
    name: "{{ logstash_package }}"
    enablerepo:
      - 'elastic-{% if elasticstack_variant == "oss" %}oss-{% endif %}{{ elasticstack_release }}.x'
  when:
    - ansible_os_family == "RedHat"

- name: Install Logstash - deb
  ansible.builtin.package:
    name: "{{ logstash_package }}"
  when:
    - ansible_os_family == "Debian"

- name: Import Logstash Security tasks
  ansible.builtin.import_tasks: logstash-security.yml
  when:
    - elasticstack_full_stack | bool
    - logstash_security is defined and logstash_security | bool
    - elasticstack_variant == "elastic"
  tags:
    - certificates
    - renew_ca
    - renew_logstash_cert

- name: Configure Logstash
  ansible.builtin.template:
    src: logstash.yml.j2
    dest: /etc/logstash/logstash.yml
    owner: root
    group: root
    mode: 0644
    backup: "{{ logstash_config_backup }}"
  notify:
    - Restart Logstash
  when: logstash_manage_yaml | bool
  tags:
    - configuration
    - logstash_configuration

- name: Configure Logstash logging
  ansible.builtin.template:
    src: log4j2.properties.j2
    dest: /etc/logstash/log4j2.properties
    owner: root
    group: root
    mode: 0644
    backup: "{{ logstash_config_backup }}"
  notify:
    - Restart Logstash
  when: logstash_manage_logging | bool
  tags:
    - configuration
    - logstash_configuration

- name: Fetch pipelines from git repositories
  loop: "{{ logstash_pipelines }}"
  ansible.builtin.include_tasks: manage_pipeline.yml
  loop_control:
    loop_var: pipelinename
  when:
    - logstash_pipelines is defined
    - not logstash_no_pipelines | bool
  tags:
    - configuration
    - logstash_configuration

- name: Create default Elasticsearch output pipeline
  when:
    - logstash_elasticsearch_output | bool
    - not logstash_no_pipelines | bool
  tags:
    - configuration
    - logstash_configuration
  block:
    - name: Create directory for default Elasticsearch output pipeline
      ansible.builtin.file:
        path: "/etc/logstash/conf.d/ansible-forwarder"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create default Elasticsearch output pipeline inputs
      ansible.builtin.template:
        src: redis-input.conf.j2
        dest: "/etc/logstash/conf.d/ansible-forwarder/input.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

    - name: Create default Elasticsearch output pipeline output
      ansible.builtin.template:
        src: elasticsearch-output.conf.j2
        dest: "/etc/logstash/conf.d/ansible-forwarder/output.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

- name: Create default Beats input pipeline
  when:
    - logstash_beats_input | bool
    - not logstash_no_pipelines | bool
  tags:
    - configuration
    - logstash_configuration
  block:
    - name: Create directory for default beats input pipeline
      ansible.builtin.file:
        path: "/etc/logstash/conf.d/ansible-input"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create default Beats input pipeline inputs
      ansible.builtin.template:
        src: beats-input.conf.j2
        dest: "/etc/logstash/conf.d/ansible-input/input.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

    - name: Create default Beats input pipeline output
      ansible.builtin.template:
        src: redis-output.conf.j2
        dest: "/etc/logstash/conf.d/ansible-input/output.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

- name: Configure Logstash pipelines
  ansible.builtin.template:
    src: pipelines.yml.j2
    dest: /etc/logstash/pipelines.yml
    owner: root
    group: root
    mode: 0644
    backup: "{{ logstash_config_backup }}"
  when:
    - logstash_manage_pipelines | bool
    - not logstash_no_pipelines | bool
  tags:
    - configuration
    - logstash_configuration

- name: Install Logstash plugins
  community.general.logstash_plugin:
    state: present
    name: "{{ item }}"
  with_items: "{{ logstash_plugins }}"
  when: logstash_plugins is defined

- name: Start Logstash
  ansible.builtin.service:
    name: logstash
    state: started
    enabled: yes
  when: logstash_enable | bool
  register: logstash_freshstart

# Free up some space to let elsticsearch allocate replica in GitHub Action
- name: Remove cache
  ansible.builtin.command: >
    rm -rf /var/cache/*
  changed_when: false
  when: ansible_virtualization_type == "container" or ansible_virtualization_type == "docker"
