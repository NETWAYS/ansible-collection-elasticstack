---

- name: Set Elasticsearch hosts if used with other roles
  set_fact:
    logstash_elasticsearch: "{{ groups['elasticsearch'] }}"
  when:
    - logstash_elasticsearch is undefined
    - groups['elasticsearch'] is defined

- name: Set Elasticsearch hosts to localhost if no other information available
  set_fact:
    logstash_elasticsearch:
      - localhost
  when:
    - logstash_elasticsearch is undefined
    - groups['elasticsearch'] is undefined


- name: Ensure Logstash is installed
  package:
    name: logstash
  when: elastic_variant == "elastic"

- name: Ensure Logstash OSS is installed
  package:
    name: logstash-oss
  when: elastic_variant == "oss"

- name: Configure Logstash
  template:
    src: logstash.yml.j2
    dest: /etc/logstash/logstash.yml
    owner: root
    group: root
    mode: 0644
    backup: "{{ logstash_config_backup }}"
  notify:
    - Restart Logstash
  when: logstash_manage_yaml | bool

- name: Create Logstash pipeline directories
  file:
    path: "/etc/logstash/conf.d/{{ logstash_pipelines[item].name }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ logstash_pipelines }}"
  when: logstash_manage_pipelines | bool and logstash_pipelines is defined

- name: Check out pipeline configuration
  git:
    repo: "{{ logstash_pipelines[item].source }}"
    dest: "/etc/logstash/conf.d/{{ logstash_pipelines[item].name }}"
    version: master
  with_items: "{{ logstash_pipelines }}"
  when: logstash_manage_pipelines | bool and logstash_pipelines is defined
  notify:
    - Restart Logstash noauto

- name: Create default Elasticsearch output pipeline
  block:
    - name: Create directory for default Elasticsearch output pipeline
      file:
        path: "/etc/logstash/conf.d/ansible-forwarder"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create default Elasticsearch output pipeline inputs
      template:
        src: redis-input.conf.j2
        dest: "/etc/logstash/conf.d/ansible-forwarder/input.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

    - name: Create default Elasticsearch output pipeline output
      template:
        src: elasticsearch-output.conf.j2
        dest: "/etc/logstash/conf.d/ansible-forwarder/output.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto
  when: logstash_elasticsearch_output | bool

- name: Create default Beats input pipeline
  block:
    - name: Create directory for default beats input pipeline
      file:
        path: "/etc/logstash/conf.d/ansible-input"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create default Beats input pipeline inputs
      template:
        src: redis-output.conf.j2
        dest: "/etc/logstash/conf.d/ansible-input/input.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto

    - name: Create default Beats input pipeline output
      template:
        src: beats-input.conf.j2
        dest: "/etc/logstash/conf.d/ansible-input/output.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto
  when: logstash_beats_input | bool

- name: Create default connector pipeline
  block:
    - name: Create directory for default connector pipeline
      file:
        path: "/etc/logstash/conf.d/ansible-connector"
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Create default connector pipeline inputs
      template:
        src: default-connector.conf.j2
        dest: "/etc/logstash/conf.d/ansible-connector/connector.conf"
        owner: root
        group: root
        mode: 0644
      notify:
        - Restart Logstash noauto
  when: logstash_connector | bool

- name: Configure Logstash pipelines
  template:
    src: pipelines.yml.j2
    dest: /etc/logstash/pipelines.yml
    owner: root
    group: root
    mode: 0644
    backup: "{{ logstash_config_backup }}"
  when: logstash_manage_pipelines | bool

- import_tasks: logstash-security.yml
  when:
    - elastic_stack_full_stack | bool
    - logstash_security | bool
    - elastic_variant == "elastic"
  tags:
    - security

- name: Start Logstash
  service:
    name: logstash
    state: started
    enabled: yes
  when: logstash_enable | bool
